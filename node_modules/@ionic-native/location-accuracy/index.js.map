{"version":3,"sources":["../../../src/@ionic-native/plugins/location-accuracy/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC3C,OAAO,EAAE,MAAA,EAAQ,OAAA,EAAS,iBAAA,EAAkB,MAAO,oBAAA,CAAqB;AAExE;;;;;;;;;;;;;;;;;;;;;;;;;;GA0BG;AASH,IAAa,gBAAgB;IAAS,oCAAiB;IARvD;QAAA,qEAmHC;QApFC;;;WAGG;QACH,+BAAyB,GAAG,CAAC,CAAC;QAE9B;;;WAGG;QACH,gCAA0B,GAAG,CAAC,CAAC;QAE/B;;;WAGG;QACH,8CAAwC,GAAG,CAAC,CAAC;QAE7C;;;WAGG;QACH,oCAA8B,GAAG,CAAC,CAAC;QAEnC;;;WAGG;QACH,gCAA0B,GAAG,CAAC,CAAC;QAE/B;;;WAGG;QACH,yBAAmB,GAAG,CAAC,CAAC;QAExB;;;WAGG;QACH,8BAAwB,GAAG,CAAC,CAAC,CAAC;QAE9B;;;WAGG;QACH,0BAAoB,GAAG,CAAC,CAAC;QAEzB;;;WAGG;QACH,4BAAsB,GAAG,CAAC,CAAC;QAE3B;;;WAGG;QACH,qBAAe,GAAG,CAAC,CAAC;QAEpB;;;WAGG;QACH,kCAA4B,GAAG,CAAC,CAAC;QAEjC;;;WAGG;QACH,0BAAoB,GAAG,CAAC,CAAC;QAEzB;;;WAGG;QACH,wCAAkC,GAAG,CAAC,CAAC;;IAQzC,CAAC;IA1GC;;;OAGG;IAEH,qCAAU,GAAV,cAAiC,MAAM,CAAC,CAAC,CAAC;IAE1C;;;OAGG;IAEH,uCAAY,GAAZ,cAAmC,MAAM,CAAC,CAAC,CAAC;IAE5C;;;;OAIG;IAEH,kCAAO,GAAP,UAAQ,QAAgB,IAAkB,MAAM,CAAC,CAAC,CAAC;IAsFrD,uBAAC;AAAD,CA3GA,AA2GC,CA3GqC,iBAAiB,GA2GtD;AANM,2BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,+BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AApGA;IADC,OAAO,EAAE;;;;kDACgC;AAO1C;IADC,OAAO,EAAE;;;;oDACkC;AAQ5C;IADC,OAAO,CAAC,EAAE,aAAa,EAAE,SAAS,EAAE,CAAC;;;;+CACa;AArBxC,gBAAgB;IAR5B,MAAM,CAAC;QACN,UAAU,EAAE,kBAAkB;QAC9B,MAAM,EAAE,0CAA0C;QAClD,SAAS,EAAE,kCAAkC;QAC7C,IAAI,EAAE,oEAAoE;QAC1E,SAAS,EAAE,CAAC,SAAS,EAAE,KAAK,CAAC;KAC9B,CAAC;GAEW,gBAAgB,CA2G5B;SA3GY,gBAAgB","file":"index.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Plugin, Cordova, IonicNativePlugin } from '@ionic-native/core';\n\n/**\n * @name Location Accuracy\n * @description\n * This Cordova/Phonegap plugin for Android and iOS to request enabling/changing of Location Services by triggering a native dialog from within the app, avoiding the need for the user to leave your app to change location settings manually.\n *\n * @usage\n * ```typescript\n * import { LocationAccuracy } from '@ionic-native/location-accuracy';\n *\n * constructor(private locationAccuracy: LocationAccuracy) { }\n *\n * ...\n *\n * this.locationAccuracy.canRequest().then((canRequest: boolean) => {\n *\n *   if(canRequest) {\n *     // the accuracy option will be ignored by iOS\n *     this.locationAccuracy.request(this.locationAccuracy.REQUEST_PRIORITY_HIGH_ACCURACY).then(\n *       () => console.log('Request successful'),\n *       error => console.log('Error requesting location permissions', error)\n *     );\n *   }\n *\n * });\n *\n * ```\n */\n@Plugin({\n  pluginName: 'LocationAccuracy',\n  plugin: 'cordova-plugin-request-location-accuracy',\n  pluginRef: 'cordova.plugins.locationAccuracy',\n  repo: 'https://github.com/dpa99c/cordova-plugin-request-location-accuracy',\n  platforms: ['Android', 'iOS']\n})\n\nexport class LocationAccuracy extends IonicNativePlugin {\n  /**\n   * Indicates if you can request accurate location\n   * @returns {Promise<boolean>} Returns a promise that resovles with a boolean that indicates if you can request accurate location\n   */\n  @Cordova()\n  canRequest(): Promise<boolean> { return; }\n\n  /**\n   * Indicates if a request is currently in progress\n   * @returns {Promise<boolean>} Returns a promise that resolves with a boolean that indicates if a request is currently in progress\n   */\n  @Cordova()\n  isRequesting(): Promise<boolean> { return; }\n\n  /**\n   * Requests accurate location\n   * @param accuracy {number} Accuracy, from 0 to 4. You can use the static properties of this class that start with REQUEST_PRIORITY_\n   * @returns {Promise<any>} Returns a promise that resolves on success and rejects if an error occurred\n   */\n  @Cordova({ callbackOrder: 'reverse' })\n  request(accuracy: number): Promise<any> { return; }\n\n  /**\n   * Convenience constant\n   * @type {number}\n   */\n  REQUEST_PRIORITY_NO_POWER = 0;\n\n  /**\n   * Convenience constant\n   * @type {number}\n   */\n  REQUEST_PRIORITY_LOW_POWER = 1;\n\n  /**\n   * Convenience constant\n   * @type {number}\n   */\n  REQUEST_PRIORITY_BALANCED_POWER_ACCURACY = 2;\n\n  /**\n   * Convenience constant\n   * @type {number}\n   */\n  REQUEST_PRIORITY_HIGH_ACCURACY = 3;\n\n  /**\n   * Convenience constant\n   * @type {number}\n   */\n  SUCCESS_SETTINGS_SATISFIED = 0;\n\n  /**\n   * Convenience constant\n   * @type {number}\n   */\n  SUCCESS_USER_AGREED = 1;\n\n  /**\n   * Convenience constant\n   * @type {number}\n   */\n  ERROR_ALREADY_REQUESTING = -1;\n\n  /**\n   * Convenience constant\n   * @type {number}\n   */\n  ERROR_INVALID_ACTION = 0;\n\n  /**\n   * Convenience constant\n   * @type {number}\n   */\n  ERROR_INVALID_ACCURACY = 1;\n\n  /**\n   * Convenience constant\n   * @type {number}\n   */\n  ERROR_EXCEPTION = 1;\n\n  /**\n   * Convenience constant\n   * @type {number}\n   */\n  ERROR_CANNOT_CHANGE_ACCURACY = 3;\n\n  /**\n   * Convenience constant\n   * @type {number}\n   */\n  ERROR_USER_DISAGREED = 4;\n\n  /**\n   * Convenience constant\n   * @type {number}\n   */\n  ERROR_GOOGLE_API_CONNECTION_FAILED = 4;\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}